{"version":3,"sources":["reportWebVitals.js","helper/router/private_route.js","com/app_layout/index.js","index.js","config/storage_key.js","helper/request/notification_antd.js","helper/request/handle_err_request.js","helper/redux/slice_redux.js","app_state/services.js","app_state/login.js","helper/router/loadable.js","config/route.js","helper/request/api_client.js","page/home/state.js","store.js","config/end_point.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PrivateRoute","children","rest","isLogin","useSelector","isLoginSelector","render","location","to","pathname","ROUTES","LOGIN","state","from","AppLayout","ReactDOM","StrictMode","store","loading","persistor","public_route","map","route","exact","path","Com","private_route","document","getElementById","ACCESS_TOKEN","REFRESH_TOKEN","openNotificationWithIcon","type","description","message","notification","duration","style","marinTop","handleErr","error","showNoti","response","get","msg","status","header","request","console","log","finishedLoadingSuccess","hasErrors","authServices","body","apiClient","post","slice","createSlice","name","initialState","reducers","loginRequest","payload","isLoadingRequest","loginSuccess","userrole","loginFail","finishedLoadingFailure","logout","actions","requestLogin","dispatch","a","data","localStorage","setItem","access_token","refresh_token","requestLogout","clear","app","loadable","importFunc","fallback","LazyComponent","lazy","props","err","Login","Home","SETTING","WELCOME","HOME","MONITORING","MACHINING","PRODUCTION_IMPLEMENTATION","PRODUCTION","IMPLEMENTATION","PLAN","MAINTENANCE","ANALYTICS","ACCOUNT","PROFILE","ABOUT","SETTINGS","SETTING_PRODUCT","GENERAL_SETTING","MACHINE_ANALYTIC","PARETO","SOFTWARE","KPI","history","createBrowserHistory","axios","create","baseURL","ENDPOINT","BASE","timeout","interceptors","use","config","getItem","headers","Promise","reject","originalRequest","url","_retry","refreshToken","method","Authorization","res","defaults","common","params","catch","delete","put","patch","login","rootReducer","combineReducers","router","connectRouter","home","persistConfig","key","storage","version","persistedReducer","persistReducer","storeConfig","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","host","BASE_MQTT","DOWNLOAD"],"mappings":"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","file":"static/js/main.f30417ff.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// REDUX\nimport { isLoginSelector } from '../../app_state/login';\nimport { ROUTES } from '../../config/route';\n\nfunction PrivateRoute({ children, ...rest }) {\n    const isLogin = useSelector(isLoginSelector);\n    // console.log(isLogin, '<PrivateRoute_isLogin>')\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isLogin ? (children) : (\n                    <Redirect\n                        to={{\n                            pathname: `/${ROUTES.LOGIN}`,\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default PrivateRoute;\n\n","import React from 'react';\n\nconst AppLayout = ({ children }) => {\n    return (\n        <div>{children}</div>\n    )\n};\n\nexport default AppLayout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Skeleton } from 'antd';\nimport { Route, Redirect, BrowserRouter as Router, Switch } from 'react-router-dom';\n\n// REDUX\nimport { public_route, private_route } from './config/route';\n// STYLES\nimport \"antd/dist/antd.css\";\nimport \"./styled/index.css\"\n// \nimport reportWebVitals from './reportWebVitals';\nimport store, { persistor } from './store';\nimport PrivateRoute from './helper/router/private_route';\nimport AppLayout from './com/app_layout';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<Skeleton />} persistor={persistor}>\n        <AppLayout>\n          <Router>\n            <Switch>\n              {public_route.map(route => (\n                <Route key={route.path} exact path={route.path}>\n                  <route.Com />\n                </Route>\n              ))}\n              {private_route.map(route => (\n                <PrivateRoute key={route.path} exact path={route.path}>\n                  <route.Com />\n                </PrivateRoute>\n              ))}\n              <Redirect to=\"/404\" />\n            </Switch>\n          </Router>\n        </AppLayout>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const RESTART_ON_REMOUNT = \"@@saga-injector/restart-on-remount\";\nexport const DAEMON = \"@@saga-injector/daemon\";\nexport const ONCE_TILL_UNMOUNT = \"@@saga-injector/once-till-unmount\";\nexport const ACCESS_TOKEN = \"access_token\";\nexport const REFRESH_TOKEN = \"refresh_token\";","import {\n    notification,\n} from \"antd\";\n\nexport const openNotificationWithIcon = (type, description, message = \"Thông báo\") => {\n    notification[type]({\n        message,\n        description,\n        duration: 3,\n        style: { marinTop: \"56px\" },\n    });\n};","import { get } from 'lodash';\nimport { openNotificationWithIcon } from './notification_antd';\n\nexport const handleErr = (error, showNoti = true) => {\n    if (error.response) {\n        // Request made and server responded\n        if (showNoti) {\n            openNotificationWithIcon(\"error\", get(error, 'response.data.msg', 'Request lỗi'));\n        }\n        return {\n            msg: get(error, 'response.data.msg', 'Request lỗi'),\n            status: get(error, 'response.status'),\n            header: get(error, 'response.headers'),\n        }\n    } else if (error.request) {\n        // The request was made but no response was received\n        console.log(error.request);\n    } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n        openNotificationWithIcon(\"error\", error.message);\n    }\n}","\nexport const finishedLoadingSuccess = (state) => {\n    state.loading = false;\n    state.hasErrors = false;\n};\n\nexport const finishedLoadingFailure = (state) => {\n    state.loading = false;\n    state.hasErrors = true;\n};\n\nexport const isLoadingRequest = (state) => {\n    state.loading = true;\n    state.hasErrors = false;\n};","import { apiClient } from '../helper/request/api_client';\n\nconst handleLogin = (body) => {\n    return apiClient.post(`login`, body);\n};\n\nconst handleSignOut = (body = {}) => {\n    return apiClient.post(`logout`, body);\n};\n\nexport const authServices = {\n    handleLogin,\n    handleSignOut\n};\n","import { createSlice } from '@reduxjs/toolkit';\n// com\nimport { openNotificationWithIcon } from \"../helper/request/notification_antd\";\nimport { handleErr } from \"../helper/request/handle_err_request\";\n// helper\nimport {\n    finishedLoadingSuccess,\n    finishedLoadingFailure,\n    isLoadingRequest,\n} from '../helper/redux/slice_redux';\nimport { authServices } from './services';\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../config/storage_key';\nimport { history } from '../helper/request/api_client';\nimport { ROUTES } from '../config/route';\n\nconst initialState = {};\n\n// Slice\nconst slice = createSlice({\n    name: 'app_state',\n    initialState,\n    reducers: {\n        loginRequest: (state, { payload }) => {\n            isLoadingRequest(state);\n            state.isLogin = false;\n        },\n        loginSuccess: (state, { payload }) => {\n            finishedLoadingSuccess(state);\n            state.isLogin = true;\n            state.userrole = payload.userrole;\n        },\n        loginFail: (state, { payload }) => {\n            finishedLoadingFailure(state)\n            state.isLogin = false;\n        },\n        logout: (state) => {\n            finishedLoadingSuccess(state);\n            state.isLogin = false;\n        }\n    }\n});\n// ACTION\nconst { loginRequest, loginSuccess, loginFail, logout } = slice.actions;\n\nexport const requestLogin = (body) => async (dispatch) => {\n    try {\n        dispatch(loginRequest());\n\n        const { data } = await authServices.handleLogin(body)\n        await dispatch(loginSuccess(data));\n\n        localStorage.setItem(ACCESS_TOKEN, data.access_token);\n        localStorage.setItem(REFRESH_TOKEN, data.refresh_token);\n        openNotificationWithIcon(\"success\", data.msg);\n        return 1;\n    } catch (err) {\n        handleErr(err);\n        dispatch(loginFail())\n        return 0;\n    }\n}\n\nexport const requestLogout = (body) => async (dispatch) => {\n    try {\n        dispatch(logout())\n        localStorage.clear();\n        return 1;\n    } catch (err) {\n        handleErr(err);\n        dispatch(loginFail())\n        return 0;\n    }\n}\n\n// SELECTOR\n\nexport const isLoginSelector = state => {\n    console.log(state, 'ddd')\n    return state.app.isLogin\n};\n\n\nexport default slice.reducer;\n","import React, { lazy, Suspense } from 'react';\nimport { Skeleton } from 'antd';\n\nconst loadable = (importFunc, { fallback = <Skeleton /> } = {}) => {\n    try {\n        const LazyComponent = lazy(importFunc);\n\n        return props => (\n            <Suspense fallback={fallback}>\n                <LazyComponent {...props} />\n            </Suspense>\n        );\n\n    } catch (err) {\n        return <div>notfound</div>\n    }\n};\n\nexport default loadable;","// \nimport loadable from '../helper/router/loadable';\n// component\n\nconst Login = loadable(() => import('../page/login'));\nconst Home = loadable(() => import('../page/home'));\n\n// route\nexport const ROUTES = {\n    // unAuth\n    LOGIN: \"login\",\n    SETTING: \"setting\",\n    WELCOME: \"welcome\",\n    // authed\n    HOME: \"\",\n    MONITORING: \"monitoring\",\n    MACHINING: \"machining\",\n    PRODUCTION_IMPLEMENTATION: \"production-implementation\",\n    PRODUCTION: {\n        IMPLEMENTATION: \"production-implementation\",\n        PLAN: \"production-plan\",\n    },\n    MAINTENANCE: \"maintenance\",\n    ANALYTICS: \"analytics\",\n    // SETTINGS: 'settings',\n    ACCOUNT: \"account\",\n    PROFILE: \"profile\",\n    ABOUT: \"about\",\n    SETTINGS: {\n        SETTING_PRODUCT: \"setting-product\",\n        GENERAL_SETTING: \"general-setting\",\n    },\n    SETTING_PRODUCT: \"setting-product\",\n    GENERAL_SETTING: \"general-setting\",\n    MACHINE_ANALYTIC: \"analytic\",\n    PARETO: \"pareto\",\n    SOFTWARE: \"software\",\n    KPI: \"kpi\",\n};\n\nexport const private_route = [\n    {\n        path: `/${ROUTES.HOME}`,\n        Com: Home,\n    },\n    {\n        path: `/${ROUTES.WELCOME}`,\n        Com: Home,\n    }\n];\n\nexport const public_route = [\n    {\n        path: `/${ROUTES.LOGIN}`,\n        Com: Login,\n    },\n    {\n        path: `/404`,\n        Com: () => <div>2223</div>,\n    }\n];","import axios from \"axios\";\nimport { createBrowserHistory } from 'history';\n\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from \"../../config/storage_key\";\nimport { ENDPOINT } from \"../../config/end_point\";\nimport store from '../../store';\nimport { requestLogout } from \"../../app_state/login\";\n\nexport const history = createBrowserHistory();\n\nconst request = axios.create({\n  baseURL: ENDPOINT.BASE,\n  timeout: 25000,\n});\n\n// Add a request interceptor\nrequest.interceptors.request.use(\n  async (config) => {\n    console.log(\"request interceptor ==== \", config);\n    const access_token = await localStorage.getItem(ACCESS_TOKEN);\n    if (access_token)\n      config.headers[\"Authorization\"] = `Bearer ${access_token}`;\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\nrequest.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async function (error) {\n    // console.log(\"err_response_interceptor_account\", error);\n    const originalRequest = error.response.config;\n    // refresh token expired\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === `refresh_token`\n    ) {\n      store.dispatch(requestLogout())\n      return Promise.reject(error);\n    }\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      const refreshToken = await localStorage.getItem(REFRESH_TOKEN);\n      return (\n        axios({\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${refreshToken}`,\n          },\n          url: ENDPOINT.REFRESH_TOKEN,\n          // url: `http://${host}:5001/refresh_token`,\n          data: {\n            refresh_token: refreshToken,\n          },\n        }).then(async (res) => {\n          //   console.log(\"create new access token\", res);\n          if (res.status === 200) {\n            await localStorage.setItem(ACCESS_TOKEN, res.data.access_token);\n            request.defaults.headers.common[\"Authorization\"] = `Bearer ${\n              res.data.access_token\n              }`;\n            return request(originalRequest);\n          }\n        })\n      );\n    }\n    // 402 => log out\n    // history.push({\n    //   pathname: \"/signin\",\n    //   state: { token_broken: true },\n    // });\n    // localStorage.clear();\n    return Promise.reject(error);\n  }\n);\n\nconst apiClient = {\n  get: (url, data = {}) => {\n    // console.log('url get: ', url, data);\n    return request({\n      method: \"get\",\n      url,\n      params: data,\n    })\n      .then((response) => response)\n      .catch((err) => {\n        throw err;\n      });\n  },\n  post: (url, data) => {\n    // console.log('post ', { url }, { data });\n    return request({\n      method: \"post\",\n      url,\n      data,\n    })\n      .then((response) => response)\n      .catch((err) => {\n        throw err;\n      });\n  },\n  delete: (url, data, headers = {}) =>\n    request({\n      method: \"delete\",\n      url,\n      data,\n      headers,\n    })\n      .then((response) => response)\n      .catch((err) => {\n        throw err;\n      }),\n  put: (url, data) =>\n    request({\n      method: \"put\",\n      url,\n      data,\n    })\n      .then((response) => response)\n      .catch((err) => {\n        throw err;\n      }),\n  patch: (url, data) =>\n    request({\n      method: \"patch\",\n      url,\n      data,\n    })\n      .then((response) => response)\n      .catch((err) => {\n        throw err;\n      }),\n};\n\nexport { apiClient };\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {};\n// Slice\nconst slice = createSlice({\n    name: 'home',\n    initialState,\n    reducers: {\n        login: (state, { payload }) => {\n            state.isLogin = true;\n        },\n    }\n});\n\nexport default slice.reducer;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore } from 'redux-persist';\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\nimport { persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist'\n\nimport { history } from './helper/request/api_client';\n// import slide\nimport home from './page/home/state';\nimport app from './app_state/login';\n// REDUX\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  home,\n  app\n})\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  version: 1,\n};\n\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// CONFIGURE STORE\nconst storeConfig = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    ([...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    })])\n});\n\nexport const persistor = persistStore(storeConfig);\nexport default storeConfig;","const host = process.env.REACT_APP_ENV === 'dev' ? '13.229.146.39' : window.location.host.split(\":\")[0];\n\nexport const ENDPOINT = {\n    BASE: `http://${host}:5005`,\n    BASE_MQTT: `http://${host}:9001/mqtt`,\n    REFRESH_TOKEN: `http://${host}:5005/refresh_token`,\n    DOWNLOAD: `https://${host}/export/template`,\n}"],"sourceRoot":""}